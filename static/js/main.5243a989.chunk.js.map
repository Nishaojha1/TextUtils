{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","btntext","setBtnText","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","border","Navbar","props","concat","mode","dist","to","title","aria-label","aria-current","toggleMode","role","htmlFor","TextForm","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","components_Alert","react_router_dist","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5243a989.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [myStyle, setMyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n    const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n    \r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color === 'black'){\r\n            setMyStyle({ \r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border: '1px solid white'\r\n                \r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n        else{\r\n            setMyStyle({ \r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n       <nav className = {`navbar navbar-expand-lg   navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className = \"container-fluid\">\r\n          <Link className = \"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className = \"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className = \"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className = \"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className = \"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className = \"nav-item\">\r\n                <Link className = \"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className = \"nav-item\">\r\n                <Link className = \"nav-link\" to=\"/about\">About</Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className={`form-check-label text-${props.mode === 'light'?'dark':'light'}`}htmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='dark'?\"Enable light mode\":\"Enable Dark mode\"}`}</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleLowClick = () => {\r\n        // console.log('uppercase was clicked' + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n    const handleUpClick = () => {\r\n        // console.log('uppercase was clicked' + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log('onChange');\r\n        setText(event.target.value);\r\n    }\r\n    const handleClearText = () => {\r\n        // console.log('uppercase was clicked' + text);\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Your Text is cleared!\",\"success\");\r\n\r\n    }\r\n\r\n    const handleCopyText = () => {\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"your Text has been copied!\",\"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed!\",\"success\");\r\n\r\n    }\r\n\r\n    \r\n    const [text, setText] = useState('enter text here');\r\n    // wrong way to set the state\r\n    // text = 'new text';  \r\n    // // correct way to set the state\r\n    // setText('new Text');\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className='container'style={{backgroundColor:props.mode === 'dark'?'#272c30':'white'}}>\r\n        <h1 style={{color:props.mode === 'dark'?'white':'#272c30'}}>{props.heading }</h1>\r\n        <div className = \"mb-3\">\r\n            <textarea className = \"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode === 'dark'?'#272c30':'white', color:props.mode === 'dark'?'white':'#272c30' }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Conver to upper case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Conver to lower case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearText}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyText}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"container my-4\" style={{backgroundColor:props.mode === 'dark'?'#272c30':'white',color:props.mode === 'dark'?'white':'#272c30'}}>\r\n            <h1> Your Text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter something in the text box above to Preview it here!'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {Routes, Route, BrowserRouter} from \"react-router-dom\";\n\n\nfunction App() {\n  var [mode, setMode] = useState('dark'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null); \n  \n  const showAlert =(message,type)=> { //to show alert messages\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null)\n    },1500)\n  }\n  const toggleMode = () => {\n    if(mode === 'dark'){\n      setMode ('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n    else{\n      setMode ('dark')\n      document.body.style.backgroundColor = '#272c30';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      <BrowserRouter>\n      <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode }/> \n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <TextForm showAlert={showAlert} heading = \"Enter your text here!\" mode={mode}/> */}\n      <Routes>\n        <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading = \"Enter your text here!\" mode={mode}/>} />\n        <Route exact path=\"/about\" element={<About />} />\n      </Routes>\n      </div>\n      </BrowserRouter>\n      { mode === 'dark'?document.body.style.backgroundColor = '#272c30' : document.body.style.backgroundColor = 'white'}\n      { mode === 'dark'?document.body.style.color = '#272c30' : document.body.style.color = 'white'}\n    </>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}